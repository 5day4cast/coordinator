- name: Cache SQLite installation
  uses: actions/cache@v3
  id: sqlite-cache
  with:
    path: /usr/local
    key: sqlite-3500400-sqlx-features-${{ runner.os }}

- name: Install SQLite with sqlx features
  if: steps.sqlite-cache.outputs.cache-hit != 'true'
  shell: bash
  run: |
    # Download SQLite amalgamation and tools
    wget https://www.sqlite.org/2025/sqlite-autoconf-3500400.tar.gz
    tar xzf sqlite-autoconf-3500400.tar.gz
    cd sqlite-autoconf-3500400

    # Configure with all features sqlx requires
    ./configure --prefix=/usr/local \
        --enable-threadsafe \
        CFLAGS="-DSQLITE_ENABLE_UNLOCK_NOTIFY=1 \
                -DSQLITE_ENABLE_COLUMN_METADATA=1 \
                -DSQLITE_ENABLE_DBSTAT_VTAB=1 \
                -DSQLITE_ENABLE_FTS3=1 \
                -DSQLITE_ENABLE_FTS4=1 \
                -DSQLITE_ENABLE_FTS5=1 \
                -DSQLITE_ENABLE_JSON1=1 \
                -DSQLITE_ENABLE_RTREE=1 \
                -DSQLITE_ENABLE_GEOPOLY=1 \
                -DSQLITE_ENABLE_MATH_FUNCTIONS=1 \
                -DSQLITE_SOUNDEX=1 \
                -DSQLITE_ENABLE_STAT4=1"

    # Compile and install
    make
    sudo make install
    sudo ldconfig

    # Clean up
    cd ..
    rm -rf sqlite-autoconf-3500400 sqlite-autoconf-3500400.tar.gz

    # Verify installation
    sqlite3 --version
    echo "SQLite installation complete with sqlx features enabled"

- name: Update ldconfig after cache restore
  if: steps.sqlite-cache.outputs.cache-hit == 'true'
  shell: bash
  run: sudo ldconfig

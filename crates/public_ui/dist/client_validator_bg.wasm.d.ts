/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export const __wbg_taprootwallet_free: (a: number, b: number) => void;
export const __wbg_taprootwalletbuilder_free: (a: number, b: number) => void;
export const taprootwalletbuilder_new: () => number;
export const taprootwalletbuilder_network: (a: number, b: number, c: number) => number;
export const taprootwalletbuilder_nostr_client: (a: number, b: number) => number;
export const taprootwalletbuilder_encrypted_key: (a: number, b: number, c: number) => number;
export const taprootwalletbuilder_build: (a: number) => any;
export const taprootwallet_getPublicData: (a: number) => [number, number, number];
export const taprootwallet_getEncryptedMasterKey: (a: number, b: number, c: number) => any;
export const taprootwallet_decryptKey: (a: number, b: number, c: number, d: number, e: number) => any;
export const taprootwallet_getEncryptedDlcPrivateKey: (a: number, b: number, c: number, d: number) => any;
export const taprootwallet_getEncryptedDlcPayoutPreimage: (a: number, b: number, c: number, d: number) => any;
export const taprootwallet_getDlcPublicKey: (a: number, b: number) => any;
export const taprootwallet_addEntryIndex: (a: number, b: number) => [number, number, number, number];
export const taprootwallet_addContract: (a: number, b: number, c: any, d: any) => [number, number];
export const taprootwallet_generatePublicNonces: (a: number, b: number) => [number, number, number];
export const taprootwallet_signAggregateNonces: (a: number, b: any, c: number) => [number, number, number];
export const taprootwallet_signFundingPsbt: (a: number, b: number, c: number, d: number) => [number, number, number, number];
export const __wbg_nostrclientwrapper_free: (a: number, b: number) => void;
export const nostrclientwrapper_new: () => number;
export const nostrclientwrapper_initialize: (a: number, b: number, c: number, d: number) => any;
export const nostrclientwrapper_getPrivateKey: (a: number) => [number, number, number, number];
export const nostrclientwrapper_getPublicKey: (a: number) => any;
export const nostrclientwrapper_getRelays: (a: number) => any;
export const nostrclientwrapper_signEvent: (a: number, b: number, c: number) => any;
export const nostrclientwrapper_getAuthHeader: (a: number, b: number, c: number, d: number, e: number, f: any) => any;
export const nostrclientwrapper_nip04: (a: number) => number;
export const nostrclientwrapper_nip44: (a: number) => number;
export const __wbg_nip04methods_free: (a: number, b: number) => void;
export const nip04methods_encrypt: (a: number, b: number, c: number, d: number, e: number) => any;
export const nip04methods_decrypt: (a: number, b: number, c: number, d: number, e: number) => any;
export const __wbg_nip44methods_free: (a: number, b: number) => void;
export const nip44methods_encrypt: (a: number, b: number, c: number, d: number, e: number) => any;
export const nip44methods_decrypt: (a: number, b: number, c: number, d: number, e: number) => any;
export const main: () => void;
export const rustsecp256k1_v0_10_0_context_create: (a: number) => number;
export const rustsecp256k1_v0_10_0_context_destroy: (a: number) => void;
export const rustsecp256k1_v0_10_0_default_illegal_callback_fn: (a: number, b: number) => void;
export const rustsecp256k1_v0_10_0_default_error_callback_fn: (a: number, b: number) => void;
export const __wbindgen_malloc: (a: number, b: number) => number;
export const __wbindgen_realloc: (a: number, b: number, c: number, d: number) => number;
export const __wbindgen_exn_store: (a: number) => void;
export const __externref_table_alloc: () => number;
export const __wbindgen_export_4: WebAssembly.Table;
export const __wbindgen_export_5: WebAssembly.Table;
export const __externref_table_dealloc: (a: number) => void;
export const __wbindgen_free: (a: number, b: number, c: number) => void;
export const closure639_externref_shim: (a: number, b: number, c: any) => void;
export const closure766_externref_shim: (a: number, b: number, c: any) => void;
export const _dyn_core__ops__function__FnMut_____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h040ab34d34cccd5c: (a: number, b: number) => void;
export const closure1095_externref_shim: (a: number, b: number, c: any) => void;
export const closure1107_externref_shim: (a: number, b: number, c: any, d: any) => void;
export const __wbindgen_start: () => void;
